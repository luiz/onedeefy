h1. What is this

Suppose you want to treat an image as a single line. You can do that in many ways. Those ways are called <i>pixel orderings</i>. This library provides implementations for a few of them.

h1. How to use

Download the jar available in the "Downloads" link above. Then, in the command line, run:

<pre>
java -jar onedeefy-1.0.jar
</pre>

to get more help. For instance, suppose you have a file called "background.jpg" and you want to convert it to 1D using a spiral ordering (see javadoc for class <tt>Spiral</tt>). Then you could run:

<pre>
java -jar onedeefy-1.0.jar spiral background.jpg background-1D.jpg
</pre>

This will result in a file called "background-1D.jpg" being created, and this file will be an image with a single line, formed by all the pixels of the original image.

To get the original image back, you need also to say its original size. Suppose it was 1024x768. Then you could run:

<pre>
java -jar onedeefy-1.0.jar spiral background-1D.jpg 1024 768 background-2D.jpg
</pre>

Oh, and you can also use it directly in your Java code. Simply add it to your classpath and call the <tt>linearize</tt> method on the class that implements the pixel ordering that you want to use.

h1. Supported image formats

The supported image formats depend on your installed Java, but usually include the most common ones: JPG, PNG and BMP.

h1. Collaborate

It's easy to add your own way of ordering the pixels in an image. There are only two simple steps:

# Implement the interface <tt>Linearize</tt>:

bc. package foo.bar.baz;
public final class MyOrdering implements Linearize {
    public BufferedImage linearize(BufferedImage image) {
        // your ordering algorithm here
    }
    public BufferedImage delinearize(BufferedImage image, int width, int height) {
        // the algorithm to reconstruct the original image here
    }
    public String getName() {
        return "a-nice-name-for-the-final-user";
    }
}

# Add the full name of your class to the file <tt>META-INF/services/br.ime.usp.lreal.onedeefy.Linearize</tt> (create it in your project if it doesn't exist):

bc. foo.bar.baz.MyOrdering

And done! It will become available as an algorithm in the command line interface.
